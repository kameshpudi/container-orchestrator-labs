trigger:
- 'none'

pool:
  vmImage: 'ubuntu-latest'

name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)

pr: none

parameters:

  - name: Action
    displayName: Action
    type: string
    default: 'Build'
    values:
    - Build
    - Plan
    - Destroy

variables:
  - name: azureContainerRegistry
    value: 'kkdcd5acrdev.azurecr.io'
  - name: backendServiceArm
    value: 'aks-svc-con'
  - name: aksAzureRmResourceGroupName
    value: 'kkdcd5-aks-rg'
  - name: kubernetesCluster
    value: 'kkdcd5aksdev'

stages :
  - stage: bootstrap
    condition: eq('${{ parameters.Action }}', 'Build')
    jobs:
      - template: templates/aks-az-cli.yaml
        parameters:
          backendServiceArm: ${{ variables.backendServiceArm }}
          aksAzureRmResourceGroupName: ${{ variables.aksAzureRmResourceGroupName }}
          aksName: ${{ variables.kubernetesCluster }}
          configurationPath: '$(System.DefaultWorkingDirectory)/az-aks/apps/poiapi/'
  
  - stage: AKSCluster_POIAPI_Deploy
    condition: and(succeeded(), eq('${{ parameters.Action }}', 'Build'))
    jobs:
      - template: templates/kubectl-apply-config.yaml
        parameters:
          azureSubscriptionEndpoint: "aksdeploy-svc-con"
          azureResourceGroup: ${{ variables.aksAzureRmResourceGroupName }}
          kubernetesCluster: ${{ variables.kubernetesCluster }}
          configurationPath: '$(System.DefaultWorkingDirectory)/az-aks/apps/poiapi/'
          azureContainerRegistry: ${{ variables.azureContainerRegistry }}