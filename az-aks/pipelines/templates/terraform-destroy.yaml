  jobs:
    - job: terraform_destroy
      steps:
        - task: TerraformInstaller@0
          displayName: 'install'
          inputs:
            terraformVersion: '${{ parameters.terraform_version }}'
        - task: TerraformTaskV2@2
          displayName: 'init'
          inputs:
            provider: 'azurerm'
            backendServiceArm: '${{ parameters.backendServiceArm }}'
            backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
            backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
            backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
            backendAzureRmKey: '${{ parameters.backendAzureRmKey }}' 
            workingDirectory: '$(System.DefaultWorkingDirectory)/az-aks/infrastructure-manifests/'
        - task: TerraformTaskV2@2
          displayName: 'destroy'
          condition: and(succeeded(), eq(variables['action'], 'Destroy'))
          inputs:
            provider: 'azurerm'
            command: 'destroy'
            environmentServiceNameAzureRM: '${{ parameters.backendServiceArm }}'
            workingDirectory: '$(System.DefaultWorkingDirectory)/az-aks/infrastructure-manifests/'